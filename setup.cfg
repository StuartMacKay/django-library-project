#
# Django Library Project
#
# Each of the tools used in the project have their configuration options
# defined here. Usually there is a link to the page that list all of the
# available. Some of the more useful options are listed even when it's
# just the default values that are used. That makes things are easy to
# change if you want.
#
# Configuration pages:
#
# bump2version:
#     https://pypi.org/project/bump2version/
#
# coverage:
#     https://coverage.readthedocs.io/en/latest/config.html
#
# flake8:
#     https://flake8.pycqa.org/en/latest/user/options.html
#     https://flake8.pycqa.org/en/latest/user/error-codes.html
#
# isort:
#     https://github.com/PyCQA/isort/wiki/isort-Settings
#
# pytest:
#     https://docs.pytest.org/en/stable/customize.html
#
# tox:
#     https://tox.readthedocs.io/en/latest/config.html
#
# Notes:
#
# The order in which the version numbers in docs/conf.py is important.
# If the release number is not processed first (using the default
# regex for parsing) then you will get the following output:
#
#   version = "0.0"
#   release = "version = "0.0""
#
# This has been reported as an issue to bump2version:
# https://github.com/c4urself/bump2version/issues/159
#
# All the various tools have their options synced to the values
# recommended for black since it's the most unforgiving of them all:
# https://github.com/psf/black/blob/master/docs/compatible_configs.md

[bumpversion]
parse = (?P<major>\d+)\.(?P<minor>\d+)(\.(?P<patch>\d+))?
current_version = 0.1
commit = True
commit_args = -S
message = New version: {new_version}
tag = True
tag_name = v{new_version}
sign_tags = True

[bumpversion:file:src/library_project/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:docs/conf.py]
search = release = "{current_version}"
replace = release = "{new_version}"

[bumpversion:file:./docs/conf.py]
parse = (?P<major>\d+)\.(?P<minor>\d+)
serialize = {major}.{minor}
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:CHANGELOG.rst]
search =
    Latest
    ------
replace =
    Latest
    ------

    {new_version} ({now:%%Y-%%m-%%d})
    ------------------

[bumpversion:file:setup.py]
search = version="{current_version}"
replace = version="{new_version}"


[flake8]
# exclude = .svn,CVS,.bzr,.hg,.git,__pycache__,.tox

extend_exclude =
    */migrations/*,
    build/,
    docs/,
    venv/

ignore =
    E123, ; closing bracket does not match indentation of opening bracketâ€™s line
    W503  ; line break before binary operator

max-line-length = 88

statistics = True


[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88

default_section = THIRDPARTY
known_django = django
known_first_party = library_project
sections =
    FUTURE,
    STDLIB,
    DJANGO,
    THIRDPARTY,
    FIRSTPARTY,
    LOCALFOLDER

skip =
    migrations,
    venv


[tool:pytest]
DJANGO_SETTINGS_MODULE = settings

testpaths =
    src
[coverage:run]
branch = true
data_file = .coverage
omit =
    */tests/*
    site/*
    venv/*

[coverage:report]
show_missing = True
skip_covered = True
fail_under = 30
exclude_lines =
    raise AssertionError
    raise NotImplementedError

[coverage:html]
directory = reports/coverage

[tox:tox]
envlist =
    {py36,py37,py38}-django{22,30,31}


[testenv:docs]
basepython=python
changedir=docs
deps=
    sphinx
    sphinx-rtd-theme
commands=
    sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
[testenv]
commands = pytest
deps =
    pytest
    pytest-django
setenv =
    PYTHONPATH = src

[wheel]
universal = 1

[bdist_wheel]
universal = 1
